pipeline {
    agent any

    options {
    buildDiscarder(logRotator(numToKeepStr: '5'))
  }

  environment {
    DOCKERHUB_CREDENTIALS = credentials('admin-m')
    DOCKER_CERT_PATH = credentials('lastest')
  }

  tools {
    // a bit ugly because there is no `@Symbol` annotation for the DockerTool
    // see the discussion about this in PR 77 and PR 52: 
    // https://github.com/jenkinsci/docker-commons-plugin/pull/77#discussion_r280910822
    // https://github.com/jenkinsci/docker-commons-plugin/pull/52
    'org.jenkinsci.plugins.docker.commons.tools.DockerTool' '18.09'
  }
    stages {
        stage('Verificar archivos JS') {
            steps {
                script {
                    // Verificar si existen archivos JS en el proyecto
                    def jsFiles = sh(script: 'find . -name "*.js"', returnStdout: true).trim()

                    if (jsFiles) {
                        echo 'Se encontraron archivos JS en el proyecto...y'
                        currentBuild.result = 'SUCCESS'  // Configurar el resultado de la compilación como éxito
                    } else {
                        error 'No se encontraron archivos JS en el proyecto. Deteniendo la ejecución.'
                    }
                }
            }
        }

       stage('Build') {
      steps {
        sh './jenkins/build.sh'
      }
    }
    stage('Login') {
      steps {
        sh './jenkins/login.sh'
      }
    }
    stage('Push') {
      steps {
        sh './jenkins/push.sh'
      }
    }
    }
    post {
    always {
      sh './jenkins/logout.sh'
    }
  }

   
}